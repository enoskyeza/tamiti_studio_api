openapi: 3.0.3
info:
  title: Tamiti Studio API
  version: 1.0.0
  description: API documentation for all Tamiti Studio backend services.
paths:
  /api/accounts/branches/:
    get:
      operationId: accounts_branches_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBranchList'
          description: ''
    post:
      operationId: accounts_branches_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /api/accounts/branches/{id}/:
    get:
      operationId: accounts_branches_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    put:
      operationId: accounts_branches_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    patch:
      operationId: accounts_branches_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    delete:
      operationId: accounts_branches_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/customer-profiles/:
    get:
      operationId: accounts_customer_profiles_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerProfileList'
          description: ''
    post:
      operationId: accounts_customer_profiles_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
  /api/accounts/customer-profiles/{id}/:
    get:
      operationId: accounts_customer_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer profile.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
    put:
      operationId: accounts_customer_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer profile.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerProfile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
    patch:
      operationId: accounts_customer_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer profile.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: ''
    delete:
      operationId: accounts_customer_profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer profile.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/departments/:
    get:
      operationId: accounts_departments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentList'
          description: ''
    post:
      operationId: accounts_departments_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/accounts/departments/{id}/:
    get:
      operationId: accounts_departments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    put:
      operationId: accounts_departments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    patch:
      operationId: accounts_departments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    delete:
      operationId: accounts_departments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/designations/:
    get:
      operationId: accounts_designations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDesignationList'
          description: ''
    post:
      operationId: accounts_designations_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Designation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Designation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Designation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Designation'
          description: ''
  /api/accounts/designations/{id}/:
    get:
      operationId: accounts_designations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this designation.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Designation'
          description: ''
    put:
      operationId: accounts_designations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this designation.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Designation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Designation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Designation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Designation'
          description: ''
    patch:
      operationId: accounts_designations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this designation.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDesignation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDesignation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDesignation'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Designation'
          description: ''
    delete:
      operationId: accounts_designations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this designation.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/staff-profiles/:
    get:
      operationId: accounts_staff_profiles_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffProfileList'
          description: ''
    post:
      operationId: accounts_staff_profiles_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffProfile'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffProfile'
          description: ''
  /api/accounts/staff-profiles/{id}/:
    get:
      operationId: accounts_staff_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff profile.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffProfile'
          description: ''
    put:
      operationId: accounts_staff_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff profile.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffProfile'
          description: ''
    patch:
      operationId: accounts_staff_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff profile.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffProfile'
          description: ''
    delete:
      operationId: accounts_staff_profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff profile.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/staff-roles/:
    get:
      operationId: accounts_staff_roles_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffRoleList'
          description: ''
    post:
      operationId: accounts_staff_roles_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffRole'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffRole'
          description: ''
  /api/accounts/staff-roles/{id}/:
    get:
      operationId: accounts_staff_roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff role.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffRole'
          description: ''
    put:
      operationId: accounts_staff_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff role.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffRole'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffRole'
          description: ''
    patch:
      operationId: accounts_staff_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff role.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaffRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaffRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaffRole'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffRole'
          description: ''
    delete:
      operationId: accounts_staff_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this staff role.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/users-list/:
    get:
      operationId: accounts_users_list_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserListList'
          description: ''
  /api/accounts/users-list/{id}/:
    get:
      operationId: accounts_users_list_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /api/accounts/virtual-assistants/:
    get:
      operationId: accounts_virtual_assistants_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVirtualAssistantList'
          description: ''
  /api/assistants/chat/{assistant_id}/:
    post:
      operationId: assistants_chat_create
      parameters:
      - in: path
        name: assistant_id
        schema:
          type: integer
        required: true
      tags:
      - assistants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssistantChat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssistantChat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssistantChat'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantResponse'
          description: ''
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/auth/me/:
    get:
      operationId: auth_me_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/password-reset-confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/auth/password-reset-request/:
    post:
      operationId: auth_password_reset_request_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/auth/register/:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/verify-email/:
    get:
      operationId: auth_verify_email_retrieve
      parameters:
      - in: query
        name: token
        schema:
          type: string
      - in: query
        name: uid
        schema:
          type: string
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Email verified successfully
        '400':
          description: Invalid link or token
        '404':
          description: Invalid user
  /api/chat/channel-messages/:
    get:
      operationId: chat_channel_messages_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChannelMessageList'
          description: ''
    post:
      operationId: chat_channel_messages_create
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChannelMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChannelMessage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMessage'
          description: ''
  /api/chat/channel-messages/{id}/:
    get:
      operationId: chat_channel_messages_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel message.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMessage'
          description: ''
    put:
      operationId: chat_channel_messages_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel message.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChannelMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChannelMessage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMessage'
          description: ''
    patch:
      operationId: chat_channel_messages_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel message.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChannelMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChannelMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChannelMessage'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMessage'
          description: ''
    delete:
      operationId: chat_channel_messages_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel message.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/chat/channels/:
    get:
      operationId: chat_channels_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChannelList'
          description: ''
    post:
      operationId: chat_channels_create
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Channel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /api/chat/channels/{id}/:
    get:
      operationId: chat_channels_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    put:
      operationId: chat_channels_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Channel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    patch:
      operationId: chat_channels_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    delete:
      operationId: chat_channels_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/chat/direct-messages/:
    get:
      operationId: chat_direct_messages_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDirectMessageList'
          description: ''
    post:
      operationId: chat_direct_messages_create
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DirectMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DirectMessage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectMessage'
          description: ''
  /api/chat/direct-messages/{id}/:
    get:
      operationId: chat_direct_messages_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this direct message.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectMessage'
          description: ''
    put:
      operationId: chat_direct_messages_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this direct message.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DirectMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DirectMessage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectMessage'
          description: ''
    patch:
      operationId: chat_direct_messages_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this direct message.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDirectMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDirectMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDirectMessage'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectMessage'
          description: ''
    delete:
      operationId: chat_direct_messages_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this direct message.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/chat/direct-threads/:
    get:
      operationId: chat_direct_threads_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDirectThreadList'
          description: ''
    post:
      operationId: chat_direct_threads_create
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectThread'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DirectThread'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DirectThread'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectThread'
          description: ''
  /api/chat/direct-threads/{id}/:
    get:
      operationId: chat_direct_threads_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this direct thread.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectThread'
          description: ''
    put:
      operationId: chat_direct_threads_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this direct thread.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectThread'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DirectThread'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DirectThread'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectThread'
          description: ''
    patch:
      operationId: chat_direct_threads_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this direct thread.
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDirectThread'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDirectThread'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDirectThread'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectThread'
          description: ''
    delete:
      operationId: chat_direct_threads_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this direct thread.
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/content/categories/:
    get:
      operationId: content_categories_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - content
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMediaCategoryList'
          description: ''
    post:
      operationId: content_categories_create
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaCategory'
          description: ''
  /api/content/categories/{id}/:
    get:
      operationId: content_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this media category.
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaCategory'
          description: ''
    put:
      operationId: content_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this media category.
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaCategory'
          description: ''
    patch:
      operationId: content_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this media category.
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMediaCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMediaCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMediaCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaCategory'
          description: ''
    delete:
      operationId: content_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this media category.
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/content/media/:
    get:
      operationId: content_media_list
      parameters:
      - in: query
        name: asset_type
        schema:
          type: string
          enum:
          - document
          - other
          - photo
          - video
        description: |-
          * `photo` - Photo
          * `video` - Video
          * `document` - Document
          * `other` - Other
      - in: query
        name: category
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - content
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMediaAssetList'
          description: ''
    post:
      operationId: content_media_create
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaAsset'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAsset'
          description: ''
  /api/content/media/{id}/:
    get:
      operationId: content_media_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this media asset.
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAsset'
          description: ''
    put:
      operationId: content_media_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this media asset.
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaAsset'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAsset'
          description: ''
    patch:
      operationId: content_media_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this media asset.
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMediaAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMediaAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMediaAsset'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAsset'
          description: ''
    delete:
      operationId: content_media_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this media asset.
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/dashboard/kpis/:
    get:
      operationId: dashboard_kpis_retrieve
      description: Return consolidated KPIs for the authenticated user.
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardKPI'
          description: ''
  /api/dashboard/summary/field/:
    get:
      operationId: dashboard_summary_field_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldSummary'
          description: ''
  /api/dashboard/summary/finance/:
    get:
      operationId: dashboard_summary_finance_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinanceSummary'
          description: ''
  /api/dashboard/summary/leads/:
    get:
      operationId: dashboard_summary_leads_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadsSummary'
          description: ''
  /api/dashboard/summary/projects/:
    get:
      operationId: dashboard_summary_projects_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSummary'
          description: ''
  /api/dashboard/summary/socials/:
    get:
      operationId: dashboard_summary_socials_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialSummary'
          description: ''
  /api/dashboard/summary/tasks/:
    get:
      operationId: dashboard_summary_tasks_retrieve
      tags:
      - dashboard
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSummary'
          description: ''
  /api/field/actions/:
    get:
      operationId: field_actions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadActionList'
          description: ''
    post:
      operationId: field_actions_create
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadAction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadAction'
          description: ''
  /api/field/actions/{id}/:
    get:
      operationId: field_actions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this lead action.
        required: true
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadAction'
          description: ''
    put:
      operationId: field_actions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this lead action.
        required: true
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadAction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadAction'
          description: ''
    patch:
      operationId: field_actions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this lead action.
        required: true
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeadAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLeadAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLeadAction'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadAction'
          description: ''
    delete:
      operationId: field_actions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this lead action.
        required: true
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/field/leads/:
    get:
      operationId: field_leads_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadList'
          description: ''
    post:
      operationId: field_leads_create
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lead'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lead'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
          description: ''
  /api/field/leads/{id}/:
    get:
      operationId: field_leads_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this lead.
        required: true
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
          description: ''
    put:
      operationId: field_leads_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this lead.
        required: true
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lead'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lead'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
          description: ''
    patch:
      operationId: field_leads_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this lead.
        required: true
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLead'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLead'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLead'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
          description: ''
    delete:
      operationId: field_leads_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this lead.
        required: true
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/field/leads/hot/:
    get:
      operationId: field_leads_hot_retrieve
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
          description: ''
  /api/field/visits/:
    get:
      operationId: field_visits_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVisitList'
          description: ''
    post:
      operationId: field_visits_create
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visit'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
          description: ''
  /api/field/visits/{id}/:
    get:
      operationId: field_visits_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visit.
        required: true
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
          description: ''
    put:
      operationId: field_visits_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visit.
        required: true
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visit'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
          description: ''
    patch:
      operationId: field_visits_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visit.
        required: true
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVisit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVisit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVisit'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
          description: ''
    delete:
      operationId: field_visits_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visit.
        required: true
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/field/visits/{id}/convert_to_lead/:
    post:
      operationId: field_visits_convert_to_lead_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this visit.
        required: true
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visit'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
          description: ''
  /api/field/zones/:
    get:
      operationId: field_zones_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedZoneList'
          description: ''
    post:
      operationId: field_zones_create
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Zone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Zone'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: ''
  /api/field/zones/{id}/:
    get:
      operationId: field_zones_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this zone.
        required: true
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: ''
    put:
      operationId: field_zones_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this zone.
        required: true
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Zone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Zone'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: ''
    patch:
      operationId: field_zones_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this zone.
        required: true
      tags:
      - field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedZone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedZone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedZone'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: ''
    delete:
      operationId: field_zones_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this zone.
        required: true
      tags:
      - field
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/accounts/:
    get:
      operationId: finance_accounts_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountList'
          description: ''
    post:
      operationId: finance_accounts_create
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/finance/accounts/{id}/:
    get:
      operationId: finance_accounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    put:
      operationId: finance_accounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    patch:
      operationId: finance_accounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    delete:
      operationId: finance_accounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/goals/:
    get:
      operationId: finance_goals_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoalList'
          description: ''
    post:
      operationId: finance_goals_create
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Goal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Goal'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
  /api/finance/goals/{id}/:
    get:
      operationId: finance_goals_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this goal.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
    put:
      operationId: finance_goals_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this goal.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Goal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Goal'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
    patch:
      operationId: finance_goals_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this goal.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoal'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
    delete:
      operationId: finance_goals_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this goal.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/goals/{id}/progress/:
    get:
      operationId: finance_goals_progress_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this goal.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
  /api/finance/invoices/:
    get:
      operationId: finance_invoices_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceList'
          description: ''
    post:
      operationId: finance_invoices_create
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/finance/invoices/{id}/:
    get:
      operationId: finance_invoices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    put:
      operationId: finance_invoices_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    patch:
      operationId: finance_invoices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    delete:
      operationId: finance_invoices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/invoices/unpaid/:
    get:
      operationId: finance_invoices_unpaid_retrieve
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/finance/parties/:
    get:
      operationId: finance_parties_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartyList'
          description: ''
    post:
      operationId: finance_parties_create
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Party'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Party'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Party'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
          description: ''
  /api/finance/parties/{id}/:
    get:
      operationId: finance_parties_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this party.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
          description: ''
    put:
      operationId: finance_parties_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this party.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Party'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Party'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Party'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
          description: ''
    patch:
      operationId: finance_parties_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this party.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedParty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedParty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedParty'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
          description: ''
    delete:
      operationId: finance_parties_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this party.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/payments/:
    get:
      operationId: finance_payments_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: finance_payments_create
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/finance/payments/{id}/:
    get:
      operationId: finance_payments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: finance_payments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: finance_payments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: finance_payments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/payments/by_goal/:
    get:
      operationId: finance_payments_by_goal_retrieve
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/finance/requisitions/:
    get:
      operationId: finance_requisitions_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRequisitionList'
          description: ''
    post:
      operationId: finance_requisitions_create
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Requisition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Requisition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Requisition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requisition'
          description: ''
  /api/finance/requisitions/{id}/:
    get:
      operationId: finance_requisitions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this requisition.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requisition'
          description: ''
    put:
      operationId: finance_requisitions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this requisition.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Requisition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Requisition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Requisition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requisition'
          description: ''
    patch:
      operationId: finance_requisitions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this requisition.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRequisition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRequisition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRequisition'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requisition'
          description: ''
    delete:
      operationId: finance_requisitions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this requisition.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/finance/requisitions/{id}/approve/:
    post:
      operationId: finance_requisitions_approve_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this requisition.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Requisition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Requisition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Requisition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requisition'
          description: ''
  /api/finance/requisitions/pending/:
    get:
      operationId: finance_requisitions_pending_retrieve
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requisition'
          description: ''
  /api/finance/transactions/:
    get:
      operationId: finance_transactions_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactionList'
          description: ''
    post:
      operationId: finance_transactions_create
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/finance/transactions/{id}/:
    get:
      operationId: finance_transactions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    put:
      operationId: finance_transactions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    patch:
      operationId: finance_transactions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - finance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    delete:
      operationId: finance_transactions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - finance
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/notifications/:
    get:
      operationId: notifications_list
      parameters:
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: is_read
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/notifications/{id}/:
    get:
      operationId: notifications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/{id}/mark-read/:
    post:
      operationId: notifications_mark_read_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/{id}/mark-unread/:
    post:
      operationId: notifications_mark_unread_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/mark-all-read/:
    post:
      operationId: notifications_mark_all_read_create
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/projects/:
    get:
      operationId: projects_list
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: priority
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectSummaryList'
          description: ''
    post:
      operationId: projects_create
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{id}/:
    get:
      operationId: projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project_id}/comments/:
    get:
      operationId: projects_comments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectCommentList'
          description: ''
    post:
      operationId: projects_comments_create
      parameters:
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectComment'
          description: ''
  /api/projects/milestones/:
    get:
      operationId: projects_milestones_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMilestoneList'
          description: ''
    post:
      operationId: projects_milestones_create
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Milestone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Milestone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Milestone'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: ''
  /api/projects/milestones/{id}/:
    get:
      operationId: projects_milestones_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: ''
    put:
      operationId: projects_milestones_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Milestone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Milestone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Milestone'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: ''
    patch:
      operationId: projects_milestones_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMilestone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMilestone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMilestone'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: ''
    delete:
      operationId: projects_milestones_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/social/comments/:
    get:
      operationId: social_comments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostCommentList'
          description: ''
    post:
      operationId: social_comments_create
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostComment'
          description: ''
  /api/social/comments/{id}/:
    get:
      operationId: social_comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post comment.
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostComment'
          description: ''
    put:
      operationId: social_comments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post comment.
        required: true
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostComment'
          description: ''
    patch:
      operationId: social_comments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post comment.
        required: true
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPostComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPostComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPostComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostComment'
          description: ''
    delete:
      operationId: social_comments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post comment.
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/social/metrics/:
    get:
      operationId: social_metrics_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSocialMetricList'
          description: ''
    post:
      operationId: social_metrics_create
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialMetric'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialMetric'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialMetric'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialMetric'
          description: ''
  /api/social/metrics/{id}/:
    get:
      operationId: social_metrics_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social metric.
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialMetric'
          description: ''
    put:
      operationId: social_metrics_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social metric.
        required: true
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialMetric'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialMetric'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialMetric'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialMetric'
          description: ''
    patch:
      operationId: social_metrics_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social metric.
        required: true
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSocialMetric'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSocialMetric'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSocialMetric'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialMetric'
          description: ''
    delete:
      operationId: social_metrics_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social metric.
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/social/platforms/:
    get:
      operationId: social_platforms_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSocialPlatformProfileList'
          description: ''
    post:
      operationId: social_platforms_create
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialPlatformProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialPlatformProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialPlatformProfile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPlatformProfile'
          description: ''
  /api/social/platforms/{id}/:
    get:
      operationId: social_platforms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social platform profile.
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPlatformProfile'
          description: ''
    put:
      operationId: social_platforms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social platform profile.
        required: true
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialPlatformProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialPlatformProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialPlatformProfile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPlatformProfile'
          description: ''
    patch:
      operationId: social_platforms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social platform profile.
        required: true
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSocialPlatformProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSocialPlatformProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSocialPlatformProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPlatformProfile'
          description: ''
    delete:
      operationId: social_platforms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social platform profile.
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/social/posts/:
    get:
      operationId: social_posts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSocialPostList'
          description: ''
    post:
      operationId: social_posts_create
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialPost'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPost'
          description: ''
  /api/social/posts/{id}/:
    get:
      operationId: social_posts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social post.
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPost'
          description: ''
    put:
      operationId: social_posts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social post.
        required: true
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialPost'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPost'
          description: ''
    patch:
      operationId: social_posts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social post.
        required: true
      tags:
      - social
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSocialPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSocialPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSocialPost'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialPost'
          description: ''
    delete:
      operationId: social_posts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this social post.
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/:
    get:
      operationId: tasks_list
      parameters:
      - in: query
        name: due_date_after
        schema:
          type: string
          format: date
      - in: query
        name: due_date_before
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: priority
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskList'
          description: ''
    post:
      operationId: tasks_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCreate'
          description: ''
  /api/tasks/{id}/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
          description: ''
    patch:
      operationId: tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
          description: ''
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/{task_id}/toggle/:
    post:
      operationId: tasks_toggle_create
      parameters:
      - in: path
        name: task_id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskToggle'
          description: ''
  /api/users/login/:
    post:
      operationId: users_login_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/users/me/:
    get:
      operationId: users_me_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/password-reset-confirm/:
    post:
      operationId: users_password_reset_confirm_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/users/password-reset-request/:
    post:
      operationId: users_password_reset_request_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/users/token/refresh/:
    post:
      operationId: users_token_refresh_create
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/verify-email/:
    get:
      operationId: users_verify_email_retrieve
      parameters:
      - in: query
        name: token
        schema:
          type: string
      - in: query
        name: uid
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Email verified successfully
        '400':
          description: Invalid link or token
        '404':
          description: Invalid user
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        number:
          type: string
          maxLength: 20
        type:
          $ref: '#/components/schemas/AccountType'
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
      required:
      - created_at
      - id
      - name
      - type
      - updated_at
      - uuid
    AccountType:
      enum:
      - bank
      - mobile_money
      - wallet
      - paypal
      - cashbox
      type: string
      description: |-
        * `bank` - Bank
        * `mobile_money` - Mobile Money
        * `wallet` - Wallet
        * `paypal` - Paypal
        * `cashbox` - Cashbox
    Actor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - id
      - username
    AssetTypeEnum:
      enum:
      - photo
      - video
      - document
      - other
      type: string
      description: |-
        * `photo` - Photo
        * `video` - Video
        * `document` - Document
        * `other` - Other
    AssistantChat:
      type: object
      properties:
        message:
          type: string
          maxLength: 1000
      required:
      - message
    AssistantResponse:
      type: object
      properties:
        assistant:
          type: string
        response:
          type: string
      required:
      - assistant
      - response
    BlankEnum:
      enum:
      - ''
    Branch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    CategoryEnum:
      enum:
      - web_dev
      - app_dev
      - training
      - facilitation
      - travel
      - marketing
      - salary
      - infrastructure
      - operations
      - utilities
      - office
      - tax
      - miscellaneous
      type: string
      description: |-
        * `web_dev` - Web Development
        * `app_dev` - App Development
        * `training` - Training
        * `facilitation` - Facilitation
        * `travel` - Travel
        * `marketing` - Marketing
        * `salary` - Salary
        * `infrastructure` - Infrastructure
        * `operations` - Operations
        * `utilities` - Utilities
        * `office` - Office Supplies
        * `tax` - Tax
        * `miscellaneous` - Miscellaneous
    Channel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        type:
          $ref: '#/components/schemas/ChannelType'
        is_private:
          type: boolean
        created_by:
          type: integer
          nullable: true
        description:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/ChannelMember'
          readOnly: true
      required:
      - id
      - members
      - name
      - type
    ChannelMember:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        channel:
          type: integer
        user:
          type: integer
        is_admin:
          type: boolean
        joined_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - channel
      - id
      - joined_at
      - user
    ChannelMessage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        channel:
          type: integer
        sender:
          type: integer
          nullable: true
        content:
          type: string
        timestamp:
          type: string
          format: date-time
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/MessageFileUpload'
          readOnly: true
      required:
      - attachments
      - channel
      - id
    ChannelType:
      enum:
      - public
      - private
      - direct
      type: string
      description: |-
        * `public` - Public
        * `private` - Private
        * `direct` - Direct Message
    CurrencyEnum:
      enum:
      - UGX
      - USD
      - EUR
      - KES
      type: string
      description: |-
        * `UGX` - UGX
        * `USD` - USD
        * `EUR` - EUR
        * `KES` - KES
    CustomerProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
        referred_by:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - updated_at
      - user
      - uuid
    DashboardKPI:
      type: object
      description: Serializer aggregating KPI metrics from all modules.
      properties:
        projects:
          $ref: '#/components/schemas/ProjectSummary'
        tasks:
          $ref: '#/components/schemas/TaskSummary'
        finance:
          $ref: '#/components/schemas/FinanceSummary'
        field:
          $ref: '#/components/schemas/FieldSummary'
        leads:
          $ref: '#/components/schemas/LeadsSummary'
        social:
          $ref: '#/components/schemas/SocialSummary'
      required:
      - field
      - finance
      - leads
      - projects
      - social
      - tasks
    Department:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    Designation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    DirectMessage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        thread:
          type: integer
        sender:
          type: integer
          nullable: true
        content:
          type: string
        timestamp:
          type: string
          format: date-time
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/DirectMessageFile'
          readOnly: true
      required:
      - attachments
      - id
      - thread
    DirectMessageFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - file
      - id
      - uploaded_at
    DirectThread:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_1:
          type: integer
        user_2:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/DirectMessage'
          readOnly: true
      required:
      - created_at
      - id
      - messages
      - user_1
      - user_2
    DirectionEnum:
      enum:
      - incoming
      - outgoing
      type: string
      description: |-
        * `incoming` - Incoming
        * `outgoing` - Outgoing
    FieldSummary:
      type: object
      description: Serializer for field module statistics.
      properties:
        total_visits:
          type: integer
        recent:
          type: array
          items:
            $ref: '#/components/schemas/RecentVisit'
      required:
      - recent
      - total_visits
    FinanceSummary:
      type: object
      description: Serializer for aggregated financial information.
      properties:
        income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        expenses:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        goals_count:
          type: integer
      required:
      - expenses
      - goals_count
      - income
    FollowUpType:
      enum:
      - call
      - demo
      - meeting
      - install
      - checkin
      type: string
      description: |-
        * `call` - Call
        * `demo` - Demo
        * `meeting` - Meeting
        * `install` - Install
        * `checkin` - Check-In
    Goal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/GoalMilestone'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        target_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        current_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
        owner:
          type: integer
      required:
      - created_at
      - due_date
      - id
      - milestones
      - owner
      - target_amount
      - title
      - updated_at
      - uuid
    GoalMilestone:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        notify:
          type: boolean
        is_reached:
          type: boolean
        goal:
          type: integer
      required:
      - amount
      - goal
      - id
    Invoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        direction:
          $ref: '#/components/schemas/DirectionEnum'
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        description:
          type: string
        issued_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        is_paid:
          type: boolean
        related_file:
          type: string
          format: uri
          nullable: true
        party:
          type: integer
      required:
      - balance
      - created_at
      - direction
      - due_date
      - id
      - issued_date
      - party
      - total_amount
      - updated_at
      - uuid
    Lead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        actions:
          type: array
          items:
            $ref: '#/components/schemas/LeadAction'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        business_name:
          type: string
          maxLength: 255
        contact_name:
          type: string
          maxLength: 100
        contact_phone:
          type: string
          maxLength: 20
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        stage:
          $ref: '#/components/schemas/StageEnum'
        source:
          oneOf:
          - $ref: '#/components/schemas/SourceEnum'
          - $ref: '#/components/schemas/BlankEnum'
        products_discussed: {}
        notes:
          type: string
        follow_up_type:
          oneOf:
          - $ref: '#/components/schemas/FollowUpType'
          - $ref: '#/components/schemas/BlankEnum'
        follow_up_date:
          type: string
          format: date
          nullable: true
        lead_score:
          type: integer
          readOnly: true
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        documents:
          type: string
          format: uri
          nullable: true
        tags:
          type: string
          description: 'Comma-separated tags like #vip,#hot'
          maxLength: 255
        zone:
          type: integer
          nullable: true
        assigned_rep:
          type: integer
          nullable: true
      required:
      - actions
      - business_name
      - contact_phone
      - created_at
      - id
      - lead_score
      - updated_at
      - uuid
    LeadAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/FollowUpType'
        date:
          type: string
          format: date-time
        notes:
          type: string
        outcome:
          type: string
          maxLength: 100
        next_follow_up:
          type: string
          format: date
          nullable: true
        lead:
          type: integer
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - created_at
      - created_by
      - id
      - lead
      - type
      - updated_at
      - uuid
    LeadsSummary:
      type: object
      description: Serializer for lead statistics.
      properties:
        total:
          type: integer
        won:
          type: integer
        lost:
          type: integer
      required:
      - lost
      - total
      - won
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    MediaAsset:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category_name:
          type: string
          readOnly: true
        uploaded_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        caption:
          type: string
          maxLength: 255
        alt_text:
          type: string
          maxLength: 255
        asset_type:
          $ref: '#/components/schemas/AssetTypeEnum'
        file:
          type: string
          format: uri
          nullable: true
        external_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        size:
          type: string
          maxLength: 20
        dimensions:
          type: string
          maxLength: 20
        category:
          type: integer
          nullable: true
        uploaded_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - category_name
      - created_at
      - id
      - title
      - updated_at
      - uploaded_by
      - uploaded_by_name
      - uuid
    MediaCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - created_at
      - id
      - name
      - updated_at
      - uuid
    MessageFileUpload:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - file
      - id
      - uploaded_at
    Milestone:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        due_date:
          type: string
          format: date
        completed:
          type: boolean
        reward:
          type: string
          maxLength: 200
        achievement_date:
          type: string
          format: date
          readOnly: true
          nullable: true
        project:
          type: integer
      required:
      - achievement_date
      - created_at
      - due_date
      - id
      - name
      - project
      - updated_at
      - uuid
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        actor:
          allOf:
          - $ref: '#/components/schemas/Actor'
          readOnly: true
        verb:
          type: string
          maxLength: 255
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - actor
      - created_at
      - id
      - verb
    OriginAppEnum:
      enum:
      - tasks
      - projects
      - digital
      - leads
      type: string
      description: |-
        * `tasks` - Tasks
        * `projects` - Projects
        * `digital` - Digital
        * `leads` - Leads
    PaginatedAccountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Account'
    PaginatedBranchList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
    PaginatedChannelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
    PaginatedChannelMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChannelMessage'
    PaginatedCustomerProfileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomerProfile'
    PaginatedDepartmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Department'
    PaginatedDesignationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Designation'
    PaginatedDirectMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DirectMessage'
    PaginatedDirectThreadList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DirectThread'
    PaginatedGoalList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Goal'
    PaginatedInvoiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    PaginatedLeadActionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LeadAction'
    PaginatedLeadList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lead'
    PaginatedMediaAssetList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MediaAsset'
    PaginatedMediaCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MediaCategory'
    PaginatedMilestoneList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Milestone'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedPartyList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Party'
    PaginatedPaymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedPostCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PostComment'
    PaginatedProjectCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectComment'
    PaginatedProjectSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectSummary'
    PaginatedRequisitionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Requisition'
    PaginatedSocialMetricList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SocialMetric'
    PaginatedSocialPlatformProfileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SocialPlatformProfile'
    PaginatedSocialPostList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SocialPost'
    PaginatedStaffProfileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffProfile'
    PaginatedStaffRoleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffRole'
    PaginatedTaskList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    PaginatedTransactionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    PaginatedUserListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserList'
    PaginatedVirtualAssistantList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VirtualAssistant'
    PaginatedVisitList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Visit'
    PaginatedZoneList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
    Party:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        type:
          $ref: '#/components/schemas/PartyType'
        is_internal_user:
          type: boolean
        user:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - name
      - type
      - updated_at
      - uuid
    PartyType:
      enum:
      - client
      - vendor
      - donor
      - investor
      - partner
      - internal
      type: string
      description: |-
        * `client` - Client
        * `vendor` - Vendor
        * `donor` - Donor
        * `investor` - Investor
        * `partner` - Partner
        * `internal` - Internal
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - new_password
      - token
      - uid
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PatchedAccount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        number:
          type: string
          maxLength: 20
        type:
          $ref: '#/components/schemas/AccountType'
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
    PatchedBranch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedChannel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        type:
          $ref: '#/components/schemas/ChannelType'
        is_private:
          type: boolean
        created_by:
          type: integer
          nullable: true
        description:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/ChannelMember'
          readOnly: true
    PatchedChannelMessage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        channel:
          type: integer
        sender:
          type: integer
          nullable: true
        content:
          type: string
        timestamp:
          type: string
          format: date-time
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/MessageFileUpload'
          readOnly: true
    PatchedCustomerProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
        referred_by:
          type: integer
          nullable: true
    PatchedDepartment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedDesignation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedDirectMessage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        thread:
          type: integer
        sender:
          type: integer
          nullable: true
        content:
          type: string
        timestamp:
          type: string
          format: date-time
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/DirectMessageFile'
          readOnly: true
    PatchedDirectThread:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_1:
          type: integer
        user_2:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/DirectMessage'
          readOnly: true
    PatchedGoal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/GoalMilestone'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        target_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        current_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
        owner:
          type: integer
    PatchedInvoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        direction:
          $ref: '#/components/schemas/DirectionEnum'
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        description:
          type: string
        issued_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        is_paid:
          type: boolean
        related_file:
          type: string
          format: uri
          nullable: true
        party:
          type: integer
    PatchedLead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        actions:
          type: array
          items:
            $ref: '#/components/schemas/LeadAction'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        business_name:
          type: string
          maxLength: 255
        contact_name:
          type: string
          maxLength: 100
        contact_phone:
          type: string
          maxLength: 20
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        stage:
          $ref: '#/components/schemas/StageEnum'
        source:
          oneOf:
          - $ref: '#/components/schemas/SourceEnum'
          - $ref: '#/components/schemas/BlankEnum'
        products_discussed: {}
        notes:
          type: string
        follow_up_type:
          oneOf:
          - $ref: '#/components/schemas/FollowUpType'
          - $ref: '#/components/schemas/BlankEnum'
        follow_up_date:
          type: string
          format: date
          nullable: true
        lead_score:
          type: integer
          readOnly: true
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        documents:
          type: string
          format: uri
          nullable: true
        tags:
          type: string
          description: 'Comma-separated tags like #vip,#hot'
          maxLength: 255
        zone:
          type: integer
          nullable: true
        assigned_rep:
          type: integer
          nullable: true
    PatchedLeadAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/FollowUpType'
        date:
          type: string
          format: date-time
        notes:
          type: string
        outcome:
          type: string
          maxLength: 100
        next_follow_up:
          type: string
          format: date
          nullable: true
        lead:
          type: integer
        created_by:
          type: integer
          readOnly: true
          nullable: true
    PatchedMediaAsset:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category_name:
          type: string
          readOnly: true
        uploaded_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        caption:
          type: string
          maxLength: 255
        alt_text:
          type: string
          maxLength: 255
        asset_type:
          $ref: '#/components/schemas/AssetTypeEnum'
        file:
          type: string
          format: uri
          nullable: true
        external_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        size:
          type: string
          maxLength: 20
        dimensions:
          type: string
          maxLength: 20
        category:
          type: integer
          nullable: true
        uploaded_by:
          type: integer
          readOnly: true
          nullable: true
    PatchedMediaCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedMilestone:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        due_date:
          type: string
          format: date
        completed:
          type: boolean
        reward:
          type: string
          maxLength: 200
        achievement_date:
          type: string
          format: date
          readOnly: true
          nullable: true
        project:
          type: integer
    PatchedParty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        type:
          $ref: '#/components/schemas/PartyType'
        is_internal_user:
          type: boolean
        user:
          type: integer
          nullable: true
    PatchedPayment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        transaction:
          allOf:
          - $ref: '#/components/schemas/Transaction'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        direction:
          $ref: '#/components/schemas/DirectionEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        receipt_file:
          type: string
          format: uri
          nullable: true
        notes:
          type: string
        party:
          type: integer
        invoice:
          type: integer
          nullable: true
        requisition:
          type: integer
          nullable: true
        account:
          type: integer
          nullable: true
        goal:
          type: integer
          nullable: true
    PatchedPostComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
        post:
          type: integer
        author:
          type: integer
          readOnly: true
    PatchedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tasks:
          type: string
          readOnly: true
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/Milestone'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/ProjectComment'
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMember'
          readOnly: true
        task_count:
          type: string
          readOnly: true
        completed_task_count:
          type: string
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        client_name:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/ProjectStatus'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        start_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        estimated_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        actual_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        completion_percentage:
          type: integer
          readOnly: true
        tags: {}
        created_by:
          type: integer
          readOnly: true
    PatchedRequisition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        status:
          type: string
          maxLength: 20
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        purpose:
          type: string
        comments:
          type: string
        date_approved:
          type: string
          format: date
          nullable: true
        requested_by:
          type: integer
          nullable: true
        approved_by:
          type: integer
          nullable: true
    PatchedSocialMetric:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        likes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        shares:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        comments:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        views:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        engagement_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        post:
          type: integer
    PatchedSocialPlatformProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        followers:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        posts_made:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        last_synced:
          type: string
          format: date-time
          nullable: true
    PatchedSocialPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/PostComment'
          readOnly: true
        metrics:
          allOf:
          - $ref: '#/components/schemas/SocialMetric'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        content_text:
          type: string
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        scheduled_for:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/PostStatus'
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        internal_notes:
          type: string
        reminder_at:
          type: string
          format: date-time
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        reviewer:
          type: integer
          nullable: true
    PatchedStaffProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Only used for virtual assistants or aliases
          maxLength: 255
        user:
          type: integer
          nullable: true
        department:
          type: integer
          nullable: true
        designation:
          type: integer
          nullable: true
        branch:
          type: integer
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        created_by:
          type: integer
          nullable: true
        role:
          type: integer
          nullable: true
    PatchedStaffRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        dashboard_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        is_virtual:
          type: boolean
        prompt_context:
          type: string
          description: Optional instructions if used as virtual assistant
        tags:
          type: array
          items:
            type: integer
    PatchedTaskUpdate:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        is_completed:
          type: boolean
        due_date:
          type: string
          format: date-time
          nullable: true
        estimated_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        actual_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        tags:
          type: array
          items:
            type: string
        notes:
          type: string
        milestone:
          type: integer
          nullable: true
        dependencies:
          type: array
          items:
            type: integer
    PatchedTransaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/TransactionType'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        description:
          type: string
        category:
          $ref: '#/components/schemas/CategoryEnum'
        date:
          type: string
          format: date
        is_automated:
          type: boolean
        account:
          type: integer
          nullable: true
        related_invoice:
          type: integer
          nullable: true
        related_requisition:
          type: integer
          nullable: true
        related_payment:
          type: integer
          nullable: true
    PatchedVisit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        linked_lead:
          allOf:
          - $ref: '#/components/schemas/Lead'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          maxLength: 255
        date_time:
          type: string
          format: date-time
        business_name:
          type: string
          maxLength: 255
        contact_name:
          type: string
          maxLength: 100
        contact_phone:
          type: string
          maxLength: 20
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        products_discussed: {}
        visit_outcome:
          oneOf:
          - $ref: '#/components/schemas/VisitOutcomeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        feedback_notes:
          type: string
        follow_up_type:
          oneOf:
          - $ref: '#/components/schemas/FollowUpType'
          - $ref: '#/components/schemas/BlankEnum'
        follow_up_date:
          type: string
          format: date
          nullable: true
        next_step_agreed:
          type: string
        prompt_given:
          type: boolean
        customer_agreed_contact:
          type: boolean
        add_as_lead:
          type: boolean
        code_verified:
          type: boolean
        rep:
          type: integer
          nullable: true
        zone:
          type: integer
          nullable: true
    PatchedZone:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        region:
          type: string
          nullable: true
          maxLength: 100
        created_by:
          type: integer
          nullable: true
    Payment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        transaction:
          allOf:
          - $ref: '#/components/schemas/Transaction'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        direction:
          $ref: '#/components/schemas/DirectionEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        receipt_file:
          type: string
          format: uri
          nullable: true
        notes:
          type: string
        party:
          type: integer
        invoice:
          type: integer
          nullable: true
        requisition:
          type: integer
          nullable: true
        account:
          type: integer
          nullable: true
        goal:
          type: integer
          nullable: true
      required:
      - amount
      - created_at
      - direction
      - id
      - party
      - transaction
      - updated_at
      - uuid
    PlatformEnum:
      enum:
      - facebook
      - instagram
      - x
      - linkedin
      - tiktok
      - youtube
      type: string
      description: |-
        * `facebook` - Facebook
        * `instagram` - Instagram
        * `x` - X (formerly Twitter)
        * `linkedin` - LinkedIn
        * `tiktok` - TikTok
        * `youtube` - YouTube
    PostComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
        post:
          type: integer
        author:
          type: integer
          readOnly: true
      required:
      - author
      - author_name
      - content
      - created_at
      - id
      - post
      - updated_at
      - uuid
    PostStatus:
      enum:
      - draft
      - under_review
      - approved
      - rejected
      - published
      type: string
      description: |-
        * `draft` - Draft
        * `under_review` - Under Review
        * `approved` - Approved
        * `rejected` - Rejected
        * `published` - Published
    PriorityEnum:
      enum:
      - low
      - medium
      - high
      - critical
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `critical` - Critical
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tasks:
          type: string
          readOnly: true
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/Milestone'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/ProjectComment'
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMember'
          readOnly: true
        task_count:
          type: string
          readOnly: true
        completed_task_count:
          type: string
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        client_name:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/ProjectStatus'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        start_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        estimated_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        actual_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        completion_percentage:
          type: integer
          readOnly: true
        tags: {}
        created_by:
          type: integer
          readOnly: true
      required:
      - comments
      - completed_task_count
      - completion_percentage
      - created_at
      - created_by
      - due_date
      - id
      - is_overdue
      - members
      - milestones
      - name
      - start_date
      - task_count
      - tasks
      - updated_at
      - uuid
    ProjectComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
        is_internal:
          type: boolean
        project:
          type: integer
        user:
          type: integer
          readOnly: true
      required:
      - content
      - created_at
      - id
      - project
      - updated_at
      - user
      - user_name
      - uuid
    ProjectMember:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_email:
          type: string
          format: email
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        role:
          $ref: '#/components/schemas/ProjectRole'
        project:
          type: integer
        user:
          type: integer
      required:
      - created_at
      - id
      - project
      - role
      - updated_at
      - user
      - user_email
      - uuid
    ProjectRole:
      enum:
      - owner
      - manager
      - contributor
      - viewer
      type: string
      description: |-
        * `owner` - Owner
        * `manager` - Manager
        * `contributor` - Contributor
        * `viewer` - Viewer
    ProjectStatus:
      enum:
      - planning
      - active
      - paused
      - review
      - complete
      - cancelled
      - archived
      type: string
      description: |-
        * `planning` - Planning
        * `active` - Active
        * `paused` - Paused
        * `review` - Review
        * `complete` - Complete
        * `cancelled` - Cancelled
        * `archived` - Archived
    ProjectSummary:
      type: object
      description: Serializer for project summary statistics.
      properties:
        total:
          type: integer
        active:
          type: integer
        completed:
          type: integer
      required:
      - active
      - completed
      - total
    RecentVisit:
      type: object
      description: Serializer for recent field visits.
      properties:
        location:
          type: string
        rep__email:
          type: string
          format: email
        date_time:
          type: string
          format: date-time
      required:
      - date_time
      - location
      - rep__email
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 15
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
      - username
    Requisition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        status:
          type: string
          maxLength: 20
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        purpose:
          type: string
        comments:
          type: string
        date_approved:
          type: string
          format: date
          nullable: true
        requested_by:
          type: integer
          nullable: true
        approved_by:
          type: integer
          nullable: true
      required:
      - amount
      - created_at
      - id
      - purpose
      - updated_at
      - uuid
    SocialMetric:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        likes:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        shares:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        comments:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        views:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        engagement_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        post:
          type: integer
      required:
      - created_at
      - id
      - post
      - updated_at
      - uuid
    SocialPlatformProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        followers:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        posts_made:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        last_synced:
          type: string
          format: date-time
          nullable: true
      required:
      - created_at
      - id
      - platform
      - updated_at
      - uuid
    SocialPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/PostComment'
          readOnly: true
        metrics:
          allOf:
          - $ref: '#/components/schemas/SocialMetric'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        content_text:
          type: string
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        scheduled_for:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/PostStatus'
        approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        internal_notes:
          type: string
        reminder_at:
          type: string
          format: date-time
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        reviewer:
          type: integer
          nullable: true
      required:
      - approved_at
      - comments
      - content_text
      - created_at
      - id
      - metrics
      - platform
      - scheduled_for
      - title
      - updated_at
      - uuid
    SocialSummary:
      type: object
      description: Serializer for social media post statistics.
      properties:
        draft:
          type: integer
        published:
          type: integer
        platforms:
          type: array
          items:
            type: string
      required:
      - draft
      - platforms
      - published
    SourceEnum:
      enum:
      - field
      - referral
      - digital
      - inbound
      - other
      type: string
      description: |-
        * `field` - Field Visit
        * `referral` - Referral
        * `digital` - Digital
        * `inbound` - Inbound
        * `other` - Other
    StaffProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Only used for virtual assistants or aliases
          maxLength: 255
        user:
          type: integer
          nullable: true
        department:
          type: integer
          nullable: true
        designation:
          type: integer
          nullable: true
        branch:
          type: integer
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        created_by:
          type: integer
          nullable: true
        role:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - updated_at
      - uuid
    StaffRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        dashboard_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        is_virtual:
          type: boolean
        prompt_context:
          type: string
          description: Optional instructions if used as virtual assistant
        tags:
          type: array
          items:
            type: integer
      required:
      - created_at
      - id
      - title
      - updated_at
      - uuid
    StaffRoleView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dashboard_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        title:
          type: string
          maxLength: 100
      required:
      - id
      - title
    StageEnum:
      enum:
      - prospect
      - qualified
      - negotiation
      - won
      - lost
      type: string
      description: |-
        * `prospect` - Prospect
        * `qualified` - Qualified
        * `negotiation` - Negotiation
        * `won` - Won
        * `lost` - Lost
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
          nullable: true
        project_name:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        due_date:
          type: string
          format: date-time
          nullable: true
        estimated_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        actual_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        assigned_to_email:
          type: string
          format: email
          readOnly: true
        dependencies:
          type: array
          items:
            type: integer
        milestone:
          type: integer
          nullable: true
        origin_app:
          oneOf:
          - $ref: '#/components/schemas/OriginAppEnum'
          - $ref: '#/components/schemas/BlankEnum'
        created_by:
          type: integer
          nullable: true
        notes:
          type: string
        position:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        is_completed:
          type: boolean
        completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
      required:
      - assigned_to_email
      - completed_at
      - created_at
      - id
      - is_overdue
      - project_name
      - title
      - updated_at
    TaskCreate:
      type: object
      properties:
        project:
          type: integer
          nullable: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        due_date:
          type: string
          format: date-time
          nullable: true
        estimated_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        notes:
          type: string
        origin_app:
          oneOf:
          - $ref: '#/components/schemas/OriginAppEnum'
          - $ref: '#/components/schemas/BlankEnum'
        milestone:
          type: integer
          nullable: true
        dependencies:
          type: array
          items:
            type: integer
        tags:
          type: array
          items:
            type: string
      required:
      - title
    TaskStatus:
      enum:
      - todo
      - in_progress
      - done
      type: string
      description: |-
        * `todo` - To Do
        * `in_progress` - In Progress
        * `done` - Done
    TaskSummary:
      type: object
      description: Serializer for task summary statistics.
      properties:
        total:
          type: integer
        completed:
          type: integer
        overdue:
          type: integer
      required:
      - completed
      - overdue
      - total
    TaskToggle:
      type: object
      properties:
        task:
          allOf:
          - $ref: '#/components/schemas/Task'
          readOnly: true
        message:
          type: string
          readOnly: true
      required:
      - message
      - task
    TaskUpdate:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        is_completed:
          type: boolean
        due_date:
          type: string
          format: date-time
          nullable: true
        estimated_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        actual_hours:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        tags:
          type: array
          items:
            type: string
        notes:
          type: string
        milestone:
          type: integer
          nullable: true
        dependencies:
          type: array
          items:
            type: integer
      required:
      - title
    Transaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/TransactionType'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        description:
          type: string
        category:
          $ref: '#/components/schemas/CategoryEnum'
        date:
          type: string
          format: date
        is_automated:
          type: boolean
        account:
          type: integer
          nullable: true
        related_invoice:
          type: integer
          nullable: true
        related_requisition:
          type: integer
          nullable: true
        related_payment:
          type: integer
          nullable: true
      required:
      - amount
      - category
      - created_at
      - id
      - type
      - updated_at
      - uuid
    TransactionType:
      enum:
      - income
      - expense
      type: string
      description: |-
        * `income` - Income
        * `expense` - Expense
    UrgencyEnum:
      enum:
      - low
      - medium
      - high
      - critical
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `critical` - Critical
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 15
        is_verified:
          type: boolean
        avatar:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/UserRole'
        total_tasks_completed:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        last_seen:
          type: string
          format: date-time
        streak_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        current_streak_started:
          type: string
          format: date
          nullable: true
        preferences:
          allOf:
          - $ref: '#/components/schemas/UserPreferences'
          readOnly: true
      required:
      - email
      - id
      - preferences
      - username
    UserList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 15
        role:
          $ref: '#/components/schemas/UserRole'
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        staff_profile:
          allOf:
          - $ref: '#/components/schemas/StaffProfile'
          readOnly: true
        customer_profile:
          allOf:
          - $ref: '#/components/schemas/CustomerProfile'
          readOnly: true
      required:
      - customer_profile
      - email
      - id
      - staff_profile
      - username
    UserPreferences:
      type: object
      properties:
        dark_mode:
          type: boolean
        language:
          type: string
          maxLength: 20
        daily_summary:
          type: boolean
    UserRole:
      enum:
      - Admin
      - Staff
      - Customer
      type: string
      description: |-
        * `Admin` - Admin
        * `Staff` - Staff
        * `Customer` - Customer
    VirtualAssistant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Only used for virtual assistants or aliases
          maxLength: 255
        role:
          allOf:
          - $ref: '#/components/schemas/StaffRoleView'
          readOnly: true
        department:
          type: string
          readOnly: true
        designation:
          type: string
          readOnly: true
        branch:
          type: string
          readOnly: true
      required:
      - branch
      - department
      - designation
      - id
      - role
    Visit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        linked_lead:
          allOf:
          - $ref: '#/components/schemas/Lead'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          maxLength: 255
        date_time:
          type: string
          format: date-time
        business_name:
          type: string
          maxLength: 255
        contact_name:
          type: string
          maxLength: 100
        contact_phone:
          type: string
          maxLength: 20
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        products_discussed: {}
        visit_outcome:
          oneOf:
          - $ref: '#/components/schemas/VisitOutcomeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        feedback_notes:
          type: string
        follow_up_type:
          oneOf:
          - $ref: '#/components/schemas/FollowUpType'
          - $ref: '#/components/schemas/BlankEnum'
        follow_up_date:
          type: string
          format: date
          nullable: true
        next_step_agreed:
          type: string
        prompt_given:
          type: boolean
        customer_agreed_contact:
          type: boolean
        add_as_lead:
          type: boolean
        code_verified:
          type: boolean
        rep:
          type: integer
          nullable: true
        zone:
          type: integer
          nullable: true
      required:
      - business_name
      - contact_phone
      - created_at
      - id
      - linked_lead
      - location
      - updated_at
      - uuid
    VisitOutcomeEnum:
      enum:
      - no_answer
      - refusal
      - interested
      - completed
      - sale_closed
      - other
      type: string
      description: |-
        * `no_answer` - No Answer
        * `refusal` - Refusal
        * `interested` - Interested
        * `completed` - GPB Setup Completed
        * `sale_closed` - Sale Closed
        * `other` - Other
    Zone:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        region:
          type: string
          nullable: true
          maxLength: 100
        created_by:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - name
      - updated_at
      - uuid
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
