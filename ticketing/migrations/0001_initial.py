# Generated by Django 5.2.4 on 2025-09-14 17:53

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('batch_number', models.CharField(max_length=20, unique=True)),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10000)])),
                ('status', models.CharField(choices=[('active', 'Active'), ('partially_used', 'Partially Used'), ('void', 'Void')], default='active', max_length=20)),
                ('voided_at', models.DateTimeField(blank=True, null=True)),
                ('void_reason', models.TextField(blank=True)),
                ('layout_columns', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('layout_rows', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('qr_size', models.PositiveIntegerField(default=25, help_text='QR code size in mm', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(50)])),
                ('include_short_code', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_batches', to=settings.AUTH_USER_MODEL)),
                ('voided_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='voided_batches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BatchExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('export_type', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('png', 'PNG Images'), ('svg', 'SVG Images')], max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('downloaded_at', models.DateTimeField(blank=True, null=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='ticketing.batch')),
                ('exported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_exports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('date', models.DateTimeField()),
                ('venue', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('ended', 'Ended'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='batch',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='ticketing.event'),
        ),
        migrations.CreateModel(
            name='EventManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('role', models.CharField(choices=[('owner', 'Event Owner'), ('manager', 'Event Manager'), ('staff', 'Event Staff')], default='staff', max_length=20)),
                ('permissions', models.JSONField(default=list, help_text='List of permission codes')),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_managers', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managers', to='ticketing.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['role', 'user__username'],
                'unique_together': {('event', 'user')},
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('max_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_types', to='ticketing.event')),
            ],
            options={
                'ordering': ['price'],
                'unique_together': {('event', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('short_code', models.CharField(max_length=10, unique=True)),
                ('qr_code', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(choices=[('unused', 'Unused'), ('activated', 'Activated'), ('scanned', 'Scanned'), ('void', 'Void')], default='unused', max_length=20)),
                ('buyer_name', models.CharField(blank=True, max_length=200)),
                ('buyer_phone', models.CharField(blank=True, max_length=20)),
                ('buyer_email', models.EmailField(blank=True, max_length=254)),
                ('notes', models.TextField(blank=True)),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
                ('scanned_at', models.DateTimeField(blank=True, null=True)),
                ('gate', models.CharField(blank=True, max_length=50)),
                ('activated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activated_tickets', to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='ticketing.batch')),
                ('scanned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scanned_tickets', to=settings.AUTH_USER_MODEL)),
                ('ticket_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ticketing.tickettype')),
            ],
            options={
                'ordering': ['short_code'],
            },
        ),
        migrations.CreateModel(
            name='BatchManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('can_activate', models.BooleanField(default=True)),
                ('can_verify', models.BooleanField(default=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_assignments', to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_managers', to='ticketing.batch')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_assignments', to='ticketing.eventmanager')),
            ],
            options={
                'ordering': ['batch__batch_number', 'manager__user__username'],
                'unique_together': {('batch', 'manager')},
            },
        ),
        migrations.CreateModel(
            name='ScanLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('qr_code', models.CharField(max_length=255)),
                ('scan_type', models.CharField(choices=[('activate', 'Activate'), ('verify', 'Verify')], max_length=20)),
                ('result', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('duplicate', 'Duplicate'), ('invalid', 'Invalid')], max_length=20)),
                ('gate', models.CharField(blank=True, max_length=50)),
                ('error_message', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scan_logs', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scan_logs', to='ticketing.ticket')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['qr_code'], name='ticketing_s_qr_code_688cea_idx'), models.Index(fields=['scan_type', 'result'], name='ticketing_s_scan_ty_bbc23c_idx'), models.Index(fields=['created_at'], name='ticketing_s_created_7cfeab_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['qr_code'], name='ticketing_t_qr_code_7468b1_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['short_code'], name='ticketing_t_short_c_a2f544_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['status'], name='ticketing_t_status_df2281_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['batch', 'status'], name='ticketing_t_batch_i_90de63_idx'),
        ),
    ]
