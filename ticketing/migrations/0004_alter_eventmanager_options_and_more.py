# Generated by Django 5.2.4 on 2025-09-16 01:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ticketing', '0003_temporaryuser'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='eventmanager',
            options={'ordering': ['role', 'user__username', 'temp_user__username']},
        ),
        migrations.AlterUniqueTogether(
            name='eventmanager',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='eventmanager',
            name='is_temporary',
            field=models.BooleanField(default=False, help_text='True if this manager is a temporary user'),
        ),
        migrations.AddField(
            model_name='eventmanager',
            name='temp_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managed_events', to='ticketing.temporaryuser'),
        ),
        migrations.AlterField(
            model_name='eventmanager',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managed_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='eventmanager',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('temp_user__isnull', True), ('user__isnull', False)), models.Q(('temp_user__isnull', False), ('user__isnull', True)), _connector='OR'), name='exactly_one_user_type'),
        ),
        migrations.AddConstraint(
            model_name='eventmanager',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('event', 'user'), name='unique_regular_user_per_event'),
        ),
        migrations.AddConstraint(
            model_name='eventmanager',
            constraint=models.UniqueConstraint(condition=models.Q(('temp_user__isnull', False)), fields=('event', 'temp_user'), name='unique_temp_user_per_event_manager'),
        ),
    ]
