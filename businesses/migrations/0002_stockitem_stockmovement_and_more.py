# Generated by Django 5.2.4 on 2025-10-18 10:05

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('businesses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StockItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('sku', models.CharField(help_text='Stock keeping unit - unique identifier', max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('cost_price', models.DecimalField(decimal_places=2, help_text='Cost per unit (what we pay)', max_digits=15)),
                ('selling_price', models.DecimalField(decimal_places=2, help_text='Selling price per unit', max_digits=15)),
                ('quantity_on_hand', models.IntegerField(default=0, help_text='Current stock level')),
                ('reorder_level', models.IntegerField(default=0, help_text='Alert when stock falls below this level')),
                ('reorder_quantity', models.IntegerField(default=0, help_text='Suggested reorder quantity')),
                ('unit_of_measure', models.CharField(default='piece', help_text='Unit of measure (piece, kg, liter, etc.)', max_length=20)),
                ('barcode', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_items', to='businesses.saccoenterprise')),
            ],
            options={
                'db_table': 'businesses_stock_item',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('movement_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('ADJUSTMENT', 'Adjustment'), ('DAMAGE', 'Damaged/Lost'), ('RETURN', 'Customer Return')], max_length=20)),
                ('quantity', models.IntegerField(help_text='Positive for stock in, negative for stock out')),
                ('unit_cost', models.DecimalField(decimal_places=2, help_text='Cost per unit at time of movement', max_digits=15)),
                ('movement_date', models.DateField()),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('source_type', models.CharField(blank=True, help_text='Source type: sale, purchase, adjustment, etc.', max_length=50)),
                ('source_id', models.IntegerField(blank=True, help_text='ID of source record', null=True)),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_movements', to=settings.AUTH_USER_MODEL)),
                ('stock_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='businesses.stockitem')),
            ],
            options={
                'db_table': 'businesses_stock_movement',
                'ordering': ['-movement_date', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='stockitem',
            index=models.Index(fields=['enterprise', 'is_active'], name='businesses__enterpr_274cb5_idx'),
        ),
        migrations.AddIndex(
            model_name='stockitem',
            index=models.Index(fields=['enterprise', 'category'], name='businesses__enterpr_0dc59f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stockitem',
            unique_together={('enterprise', 'sku')},
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['stock_item', 'movement_date'], name='businesses__stock_i_645eec_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['movement_type', 'movement_date'], name='businesses__movemen_4092ad_idx'),
        ),
    ]
