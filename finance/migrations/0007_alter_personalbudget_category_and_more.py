# Generated by Django 5.1 on 2025-09-10 21:29

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('finance', '0006_personalbudget_personalsavingsgoal_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='personalbudget',
            name='category',
            field=models.CharField(choices=[('food', 'Food & Dining'), ('transport', 'Transportation'), ('utilities', 'Utilities'), ('entertainment', 'Entertainment'), ('healthcare', 'Healthcare'), ('shopping', 'Shopping'), ('education', 'Education'), ('savings', 'Savings & Investment'), ('debt', 'Debt Payment'), ('rent', 'Rent & Housing'), ('insurance', 'Insurance'), ('subscriptions', 'Subscriptions'), ('gifts', 'Gifts & Donations'), ('transfer', 'Account Transfer'), ('transfer_fee', 'Transfer Fee'), ('loan_given', 'Loan Given'), ('other', 'Other')], max_length=50),
        ),
        migrations.AlterField(
            model_name='personaltransaction',
            name='expense_category',
            field=models.CharField(blank=True, choices=[('food', 'Food & Dining'), ('transport', 'Transportation'), ('utilities', 'Utilities'), ('entertainment', 'Entertainment'), ('healthcare', 'Healthcare'), ('shopping', 'Shopping'), ('education', 'Education'), ('savings', 'Savings & Investment'), ('debt', 'Debt Payment'), ('rent', 'Rent & Housing'), ('insurance', 'Insurance'), ('subscriptions', 'Subscriptions'), ('gifts', 'Gifts & Donations'), ('transfer', 'Account Transfer'), ('transfer_fee', 'Transfer Fee'), ('loan_given', 'Loan Given'), ('other', 'Other')], help_text='Required for expense transactions', max_length=50),
        ),
        migrations.AlterField(
            model_name='personaltransaction',
            name='income_source',
            field=models.CharField(blank=True, choices=[('salary', 'Salary'), ('freelance', 'Freelance Work'), ('business', 'Business Income'), ('investment', 'Investment Returns'), ('rental', 'Rental Income'), ('gift', 'Gift/Allowance'), ('refund', 'Refund'), ('bonus', 'Bonus'), ('transfer', 'Account Transfer'), ('loan_repayment', 'Loan Repayment'), ('other', 'Other')], help_text='Required for income transactions', max_length=50),
        ),
        migrations.AlterField(
            model_name='personaltransactionrecurring',
            name='expense_category',
            field=models.CharField(blank=True, choices=[('food', 'Food & Dining'), ('transport', 'Transportation'), ('utilities', 'Utilities'), ('entertainment', 'Entertainment'), ('healthcare', 'Healthcare'), ('shopping', 'Shopping'), ('education', 'Education'), ('savings', 'Savings & Investment'), ('debt', 'Debt Payment'), ('rent', 'Rent & Housing'), ('insurance', 'Insurance'), ('subscriptions', 'Subscriptions'), ('gifts', 'Gifts & Donations'), ('transfer', 'Account Transfer'), ('transfer_fee', 'Transfer Fee'), ('loan_given', 'Loan Given'), ('other', 'Other')], max_length=50),
        ),
        migrations.AlterField(
            model_name='personaltransactionrecurring',
            name='income_source',
            field=models.CharField(blank=True, choices=[('salary', 'Salary'), ('freelance', 'Freelance Work'), ('business', 'Business Income'), ('investment', 'Investment Returns'), ('rental', 'Rental Income'), ('gift', 'Gift/Allowance'), ('refund', 'Refund'), ('bonus', 'Bonus'), ('transfer', 'Account Transfer'), ('loan_repayment', 'Loan Repayment'), ('other', 'Other')], max_length=50),
        ),
        migrations.CreateModel(
            name='PersonalAccountTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('transfer_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1, help_text='For different currency accounts', max_digits=10)),
                ('description', models.TextField()),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('credit_transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfer_credit', to='finance.personaltransaction')),
                ('debit_transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfer_debit', to='finance.personaltransaction')),
                ('fee_transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfer_fee', to='finance.personaltransaction')),
                ('from_account', models.ForeignKey(limit_choices_to={'scope': 'personal'}, on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transfers', to='finance.account')),
                ('to_account', models.ForeignKey(limit_choices_to={'scope': 'personal'}, on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transfers', to='finance.account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_transfers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PersonalDebt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('creditor_name', models.CharField(max_length=200)),
                ('creditor_contact', models.CharField(blank=True, max_length=100)),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('current_balance', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('interest_rate', models.DecimalField(decimal_places=2, default=0, help_text='Annual interest rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('has_interest', models.BooleanField(default=False)),
                ('borrowed_date', models.DateField()),
                ('due_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_fully_paid', models.BooleanField(default=False)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personal_debts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['due_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DebtPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('account', models.ForeignKey(limit_choices_to={'scope': 'personal'}, on_delete=django.db.models.deletion.CASCADE, to='finance.account')),
                ('transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debt_payment', to='finance.personaltransaction')),
                ('debt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='finance.personaldebt')),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='PersonalLoan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('borrower_name', models.CharField(max_length=200)),
                ('borrower_contact', models.CharField(blank=True, max_length=100)),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('current_balance', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('interest_rate', models.DecimalField(decimal_places=2, default=0, help_text='Annual interest rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('has_interest', models.BooleanField(default=False)),
                ('loan_date', models.DateField()),
                ('due_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_fully_repaid', models.BooleanField(default=False)),
                ('repaid_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personal_loans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['due_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoanRepayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('repayment_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('account', models.ForeignKey(limit_choices_to={'scope': 'personal'}, on_delete=django.db.models.deletion.CASCADE, to='finance.account')),
                ('transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loan_repayment', to='finance.personaltransaction')),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repayments', to='finance.personalloan')),
            ],
            options={
                'ordering': ['-repayment_date'],
            },
        ),
    ]
