# Generated by Django 5.1 on 2025-09-08 23:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(help_text='Human-readable permission name', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of what this permission allows/denies')),
                ('action', models.CharField(choices=[('create', 'Create'), ('read', 'Read'), ('update', 'Update'), ('delete', 'Delete'), ('list', 'List')], max_length=20)),
                ('permission_type', models.CharField(choices=[('allow', 'Allow'), ('deny', 'Deny')], default='allow', max_length=10)),
                ('scope', models.CharField(choices=[('global', 'Global'), ('object', 'Object-specific'), ('field', 'Field-specific')], default='global', max_length=20)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('field_name', models.CharField(blank=True, help_text='Specific field name for field-level permissions', max_length=100)),
                ('conditions', models.JSONField(blank=True, default=dict, help_text='Additional conditions for permission evaluation')),
                ('priority', models.IntegerField(default=0, help_text='Priority for permission resolution (higher wins)')),
                ('is_active', models.BooleanField(default=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_permissions', to='contenttypes.contenttype')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_permissions', to='auth.group')),
                ('users', models.ManyToManyField(blank=True, related_name='custom_permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'permissions_permission',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PermissionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='permission_groups', to='auth.group')),
                ('permissions', models.ManyToManyField(related_name='permission_groups', to='permissions.permission')),
                ('users', models.ManyToManyField(blank=True, related_name='permission_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'permissions_permission_group',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PermissionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('action', models.CharField(choices=[('create', 'Create'), ('read', 'Read'), ('update', 'Update'), ('delete', 'Delete'), ('list', 'List')], max_length=20)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('field_name', models.CharField(blank=True, max_length=100)),
                ('permission_granted', models.BooleanField()),
                ('permissions_applied', models.JSONField(default=list, help_text='List of permission IDs that were evaluated')),
                ('request_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_log_entries', to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'permissions_permission_log',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserPermissionCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('action', models.CharField(choices=[('create', 'Create'), ('read', 'Read'), ('update', 'Update'), ('delete', 'Delete'), ('list', 'List')], max_length=20)),
                ('field_name', models.CharField(blank=True, max_length=100)),
                ('has_permission', models.BooleanField()),
                ('cache_expires_at', models.DateTimeField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_cache_entries', to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_cache', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'permissions_user_permission_cache',
            },
        ),
        migrations.AddIndex(
            model_name='permission',
            index=models.Index(fields=['content_type', 'action'], name='permissions_content_d49084_idx'),
        ),
        migrations.AddIndex(
            model_name='permission',
            index=models.Index(fields=['content_type', 'object_id'], name='permissions_content_bf8c6c_idx'),
        ),
        migrations.AddIndex(
            model_name='permission',
            index=models.Index(fields=['permission_type', 'priority'], name='permissions_permiss_21594c_idx'),
        ),
        migrations.AddIndex(
            model_name='permission',
            index=models.Index(fields=['is_active'], name='permissions_is_acti_9afbb7_idx'),
        ),
        migrations.AddIndex(
            model_name='permissionlog',
            index=models.Index(fields=['user', 'created_at'], name='permissions_user_id_016017_idx'),
        ),
        migrations.AddIndex(
            model_name='permissionlog',
            index=models.Index(fields=['content_type', 'action'], name='permissions_content_e3eaf9_idx'),
        ),
        migrations.AddIndex(
            model_name='permissionlog',
            index=models.Index(fields=['permission_granted'], name='permissions_permiss_c6f4c4_idx'),
        ),
        migrations.AddIndex(
            model_name='userpermissioncache',
            index=models.Index(fields=['user', 'content_type', 'action'], name='permissions_user_id_2f9f7c_idx'),
        ),
        migrations.AddIndex(
            model_name='userpermissioncache',
            index=models.Index(fields=['cache_expires_at'], name='permissions_cache_e_d16953_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userpermissioncache',
            unique_together={('user', 'content_type', 'object_id', 'action', 'field_name')},
        ),
    ]
