# Generated by Django 5.1 on 2025-09-09 21:07

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0010_alter_customerprofile_uuid_alter_staffprofile_uuid_and_more'),
        ('planner', '0001_initial'),
        ('projects', '0005_alter_milestone_uuid_alter_project_uuid_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='availabilitytemplate',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False),
        ),
        migrations.AlterField(
            model_name='breakpolicy',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False),
        ),
        migrations.AlterField(
            model_name='calendarevent',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False),
        ),
        migrations.AlterField(
            model_name='timeblock',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False),
        ),
        migrations.CreateModel(
            name='DailyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date', models.DateField()),
                ('summary', models.TextField(blank=True, help_text='Overall day summary')),
                ('mood', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('neutral', 'Neutral'), ('poor', 'Poor'), ('terrible', 'Terrible')], max_length=20, null=True)),
                ('highlights', models.TextField(blank=True, help_text='Key accomplishments')),
                ('lessons', models.TextField(blank=True, help_text='What did you learn?')),
                ('tomorrow_top3', models.JSONField(blank=True, default=list, help_text='Top 3 priorities for tomorrow')),
                ('tasks_planned', models.PositiveIntegerField(default=0)),
                ('tasks_completed', models.PositiveIntegerField(default=0)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('focus_time_minutes', models.PositiveIntegerField(default=0)),
                ('break_time_minutes', models.PositiveIntegerField(default=0)),
                ('productivity_score', models.DecimalField(decimal_places=2, default=0, help_text='Algorithmic productivity score 0-100', max_digits=5)),
                ('current_streak', models.PositiveIntegerField(default=0, help_text='Current daily completion streak')),
                ('owner_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='planner_dai_date_be63f3_idx'), models.Index(fields=['owner_user', 'date'], name='planner_dai_owner_u_b1ee40_idx'), models.Index(fields=['productivity_score'], name='planner_dai_product_69f541_idx')],
                'unique_together': {('date', 'owner_user')},
            },
        ),
        migrations.CreateModel(
            name='ProductivityInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('insight_type', models.CharField(choices=[('peak_hours', 'Peak Productivity Hours'), ('task_duration', 'Optimal Task Duration'), ('break_pattern', 'Optimal Break Pattern'), ('weekly_trend', 'Weekly Productivity Trend'), ('completion_pattern', 'Task Completion Pattern')], max_length=50)),
                ('data', models.JSONField(default=dict)),
                ('confidence_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('sample_size', models.PositiveIntegerField(default=0)),
                ('valid_from', models.DateField()),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('owner_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productivity_insights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-confidence_score'],
                'indexes': [models.Index(fields=['owner_user', 'insight_type'], name='planner_pro_owner_u_6d8bc1_idx'), models.Index(fields=['is_active', 'confidence_score'], name='planner_pro_is_acti_e87910_idx')],
                'unique_together': {('owner_user', 'insight_type')},
            },
        ),
        migrations.CreateModel(
            name='WorkGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_tasks', models.PositiveIntegerField(default=0)),
                ('completed_tasks', models.PositiveIntegerField(default=0)),
                ('owner_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_goals', to='accounts.department')),
                ('owner_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_goals', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_goals', to='projects.project')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['target_date'], name='planner_wor_target__ee7925_idx'), models.Index(fields=['is_active'], name='planner_wor_is_acti_dd8a59_idx'), models.Index(fields=['owner_user', 'is_active'], name='planner_wor_owner_u_9b5ecf_idx'), models.Index(fields=['owner_team', 'is_active'], name='planner_wor_owner_t_b9719e_idx')],
            },
        ),
    ]
